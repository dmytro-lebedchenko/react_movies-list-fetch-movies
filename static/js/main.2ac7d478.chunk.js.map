{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/FindMovie/FindMovie.tsx","api.ts","App.tsx","index.tsx"],"names":["MovieCard","movie","title","description","imgUrl","imdbUrl","className","src","alt","href","MoviesList","movies","map","imdbId","FindMovie","onAddMovie","useState","setMovie","query","setQuery","isLoading","setIsLoading","hasError","setHasError","onSubmit","event","preventDefault","fetch","then","res","json","catch","Response","Error","getMovie","response","Title","Plot","Poster","imdbID","imdbUrlLink","finally","htmlFor","type","id","placeholder","value","onChange","target","classNames","disabled","onClick","App","setMovies","newMovie","every","state","ReactDOM","render","document","getElementById"],"mappings":"kTAQaA,EAA6B,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAEzCC,EACED,EADFC,MAAOC,EACLF,EADKE,YAAaC,EAClBH,EADkBG,OAAQC,EAC1BJ,EAD0BI,QAG9B,OACE,sBAAKC,UAAU,OAAO,UAAQ,YAA9B,UACE,qBAAKA,UAAU,aAAf,SACE,wBAAQA,UAAU,gBAAlB,SACE,qBACE,UAAQ,cACRC,IAAKH,EACLI,IAAI,kBAKV,sBAAKF,UAAU,eAAf,UACE,sBAAKA,UAAU,QAAf,UACE,qBAAKA,UAAU,aAAf,SACE,wBAAQA,UAAU,iBAAlB,SACE,qBACEC,IAAI,wBACJC,IAAI,aAKV,qBAAKF,UAAU,gBAAf,SACE,mBAAGA,UAAU,aAAa,UAAQ,aAAlC,SACGJ,SAKP,sBAAKI,UAAU,UAAU,UAAQ,mBAAjC,UACGH,EAED,uBAEA,mBACEM,KAAMJ,EACN,UAAQ,WAFV,4BCvCGK,G,MAA8B,SAAC,GAAD,IAAGC,EAAH,EAAGA,OAAH,OACzC,qBAAKL,UAAU,SAAf,SACGK,EAAOC,KAAI,SAAAX,GAAK,OACf,cAAC,EAAD,CAEEA,MAAOA,GADFA,EAAMY,e,0BCFNC,EAA6B,SAAC,GAAoB,IAAlBC,EAAiB,EAAjBA,WAC3C,EAA0BC,mBAAuB,MAAjD,mBAAOf,EAAP,KAAcgB,EAAd,KACA,EAA0BD,mBAAS,IAAnC,mBAAOE,EAAP,KAAcC,EAAd,KACA,EAAkCH,oBAAS,GAA3C,mBAAOI,EAAP,KAAkBC,EAAlB,KACA,EAAgCL,oBAAS,GAAzC,mBAAOM,EAAP,KAAiBC,EAAjB,KAmDA,OACE,qCACE,uBACEjB,UAAU,aACVkB,SArDe,SAACC,GACpBA,EAAMC,iBACNL,GAAa,GCdV,SAAkBH,GACvB,OAAOS,MAAM,GAAD,OAHE,2CAGF,cAAiBT,IAC1BU,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBC,OAAM,iBAAO,CACZC,SAAU,QACVC,MAAO,uBDWTC,CAAShB,GACNU,MAAK,SAAAO,GACJ,GAAI,UAAWA,EAIb,OAHAZ,GAAY,QACZN,EAAS,MAKX,IACEmB,EACED,EADFC,MAAOC,EACLF,EADKE,KAAMC,EACXH,EADWG,OAAQC,EACnBJ,EADmBI,OAKjBC,EAAW,qCAAiCD,GAElDtB,EAAS,CACPf,MAAOkC,EACPjC,YAAakC,EACbjC,OAAmB,QAAXkC,EAPY,4DAShBA,EACJjC,QAASmC,EACT3B,OAAQ0B,OAGXR,OAAM,WACLR,GAAY,GACZN,EAAS,SAEVwB,SAAQ,kBAAMpB,GAAa,OAgB5B,UAIE,sBAAKf,UAAU,QAAf,UACE,uBAAOA,UAAU,QAAQoC,QAAQ,cAAjC,yBAIA,qBAAKpC,UAAU,UAAf,SACE,uBACE,UAAQ,aACRqC,KAAK,OACLC,GAAG,cACHC,YAAY,0BACZvC,UAAU,kBACVwC,MAAO5B,EACP6B,SA9Bc,SAACtB,GACzBN,EAASM,EAAMuB,OAAOF,OACtBvB,GAAY,QAgCLD,GACC,mBAAGhB,UAAU,iBAAiB,UAAQ,eAAtC,qDAMJ,sBAAKA,UAAU,mBAAf,UACE,qBAAKA,UAAU,UAAf,SACE,wBACE,UAAQ,eACRqC,KAAK,SACLrC,UAAW2C,IACT,kBACA,CAAE,aAAc7B,IAElB8B,UAAWhC,EAPb,4BAaDjB,GACC,qBAAKK,UAAU,UAAf,SACE,wBACE,UAAQ,YACRqC,KAAK,SACLrC,UAAU,oBACV6C,QAAS,kBAxDrBpC,EAwD0Cd,GAvD1CgB,EAAS,WACTE,EAAS,KAkDC,qCAaPlB,GACC,sBAAKK,UAAU,YAAY,UAAQ,mBAAnC,UACE,oBAAIA,UAAU,QAAd,qBAIA,cAAC,EAAD,CAAWL,MAAOA,WE9HfmD,G,MAAgB,WAC3B,MAA4BpC,mBAAkB,IAA9C,mBAAOL,EAAP,KAAe0C,EAAf,KAQA,OACE,sBAAK/C,UAAU,OAAf,UACE,qBAAKA,UAAU,eAAf,SACE,cAAC,EAAD,CAAYK,OAAQA,MAGtB,qBAAKL,UAAU,UAAf,SACE,cAAC,EAAD,CACES,WAde,SAACuC,GAClB3C,EAAO4C,OAAM,SAAAtD,GAAK,OAAIA,EAAMY,SAAWyC,EAASzC,WAClDwC,GAAU,SAAAG,GAAK,4BAAQA,GAAR,CAAeF,iBCPpCG,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.2ac7d478.chunk.js","sourcesContent":["import React from 'react';\nimport { Movie } from '../../types/Movie';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie,\n};\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => {\n  const {\n    title, description, imgUrl, imdbUrl,\n  } = movie;\n\n  return (\n    <div className=\"card\" data-cy=\"movieCard\">\n      <div className=\"card-image\">\n        <figure className=\"image is-4by3\">\n          <img\n            data-cy=\"moviePoster\"\n            src={imgUrl}\n            alt=\"Film logo\"\n          />\n        </figure>\n      </div>\n\n      <div className=\"card-content\">\n        <div className=\"media\">\n          <div className=\"media-left\">\n            <figure className=\"image is-48x48\">\n              <img\n                src=\"images/imdb-logo.jpeg\"\n                alt=\"imdb\"\n              />\n            </figure>\n          </div>\n\n          <div className=\"media-content\">\n            <p className=\"title is-8\" data-cy=\"movieTitle\">\n              {title}\n            </p>\n          </div>\n        </div>\n\n        <div className=\"content\" data-cy=\"movieDescription\">\n          {description}\n\n          <br />\n\n          <a\n            href={imdbUrl}\n            data-cy=\"movieURL\"\n          >\n            IMDB\n          </a>\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\nimport './MoviesList.scss';\n\ntype Props = {\n  movies: Movie[];\n};\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard\n        key={movie.imdbId}\n        movie={movie}\n      />\n    ))}\n  </div>\n);\n","import React, { ChangeEvent, FormEvent, useState } from 'react';\nimport classNames from 'classnames';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\nimport { getMovie } from '../../api';\nimport './FindMovie.scss';\n\ninterface Props {\n  onAddMovie: (newMovie: Movie) => void;\n}\n\nexport const FindMovie: React.FC<Props> = ({ onAddMovie }) => {\n  const [movie, setMovie] = useState<Movie | null>(null);\n  const [query, setQuery] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [hasError, setHasError] = useState(false);\n\n  const handleSubmit = (event: FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    setIsLoading(true);\n\n    getMovie(query)\n      .then(response => {\n        if ('Error' in response) {\n          setHasError(true);\n          setMovie(null);\n\n          return;\n        }\n\n        const {\n          Title, Plot, Poster, imdbID,\n        } = response;\n\n        const defaultPoster = 'https://via.placeholder.com/'\n          + '360x270.png?text=no%20preview';\n        const imdbUrlLink = `https://www.imdb.com/title/${imdbID}`;\n\n        setMovie({\n          title: Title,\n          description: Plot,\n          imgUrl: Poster === 'N/A'\n            ? defaultPoster\n            : Poster,\n          imdbUrl: imdbUrlLink,\n          imdbId: imdbID,\n        });\n      })\n      .catch(() => {\n        setHasError(true);\n        setMovie(null);\n      })\n      .finally(() => setIsLoading(false));\n  };\n\n  const handleMovieSearch = (event: ChangeEvent<HTMLInputElement>) => {\n    setQuery(event.target.value);\n    setHasError(false);\n  };\n\n  const handleMovieAdd = (newMovie: Movie) => {\n    onAddMovie(newMovie);\n    setMovie(null);\n    setQuery('');\n  };\n\n  return (\n    <>\n      <form\n        className=\"find-movie\"\n        onSubmit={handleSubmit}\n      >\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              data-cy=\"titleField\"\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className=\"input is-dander\"\n              value={query}\n              onChange={handleMovieSearch}\n            />\n          </div>\n\n          {hasError && (\n            <p className=\"help is-danger\" data-cy=\"errorMessage\">\n              Can&apos;t find a movie with such a title\n            </p>\n          )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              data-cy=\"searchButton\"\n              type=\"submit\"\n              className={classNames(\n                'button is-light',\n                { 'is-loading': isLoading },\n              )}\n              disabled={!query}\n            >\n              Find a movie\n            </button>\n          </div>\n\n          {movie && (\n            <div className=\"control\">\n              <button\n                data-cy=\"addButton\"\n                type=\"button\"\n                className=\"button is-primary\"\n                onClick={() => handleMovieAdd(movie)}\n              >\n                Add to the list\n              </button>\n            </div>\n          )}\n        </div>\n      </form>\n\n      {movie && (\n        <div className=\"container\" data-cy=\"previewContainer\">\n          <h2 className=\"title\">\n            Preview\n          </h2>\n\n          <MovieCard movie={movie} />\n        </div>\n      )}\n    </>\n  );\n};\n","import { MovieData } from './types/MovieData';\nimport { ResponseError } from './types/ResponseError';\n\nconst API_URL = 'https://www.omdbapi.com/?apikey=e841e860';\n\nexport function getMovie(query: string): Promise<MovieData | ResponseError> {\n  return fetch(`${API_URL}&t=${query}`)\n    .then(res => res.json())\n    .catch(() => ({\n      Response: 'False',\n      Error: 'unexpected error',\n    }));\n}\n","import React, { useState } from 'react';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport { Movie } from './types/Movie';\nimport './App.scss';\n\nexport const App: React.FC = () => {\n  const [movies, setMovies] = useState<Movie[]>([]);\n\n  const handleAddMovie = (newMovie: Movie) => {\n    if (movies.every(movie => movie.imdbId !== newMovie.imdbId)) {\n      setMovies(state => [...state, newMovie]);\n    }\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n\n      <div className=\"sidebar\">\n        <FindMovie\n          onAddMovie={handleAddMovie}\n        />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}